name: Publish to GitHub Packages

on:
  release:
    types: [published]

defaults:
  run:
    working-directory: ./python

jobs:
  validate-release-tag:
    name: Validate git tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      - name: Check if pre-release
        run: |
          if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
            echo "Skipping pre-release"
            exit 0
          fi
      - name: compare git tag with cargo metadata
        run: |
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          CURR_VER=$( grep version Cargo.toml | head -n 1 | awk '{print $3}' | tr -d '"' )
          EXPECTED_TAG="v${CURR_VER}"
          if [[ "${RELEASE_TAG}" != "${EXPECTED_TAG}" ]]; then
            echo "Cargo metadata has version set to ${CURR_VER}, but got release tag ${RELEASE_TAG}."
            echo "Expected tag: ${EXPECTED_TAG}"
            exit 1
          fi

  release-github-packages-mac:
    needs: validate-release-tag
    name: GitHub Packages release on Mac
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    runs-on: macos-14
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine

      - name: Build with maturin
        run: |
          maturin build --release --target ${{ matrix.target }} -o dist

      - name: Publish to GitHub Packages
        run: |
          python -m twine upload --repository-url https://upload.pkg.github.com/ dist/*.whl
        env:
          TWINE_USERNAME: ${{ github.actor }}
          TWINE_PASSWORD: ${{ secrets.GH_PAT }}

  release-github-packages-windows:
    needs: validate-release-tag
    name: GitHub Packages release on Windows
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine

      - name: Build with maturin
        run: |
          maturin build --release --target x86_64-pc-windows-msvc -o dist

      - name: Publish to GitHub Packages
        run: |
          python -m twine upload --repository-url https://upload.pkg.github.com/ dist/*.whl
        env:
          TWINE_USERNAME: ${{ github.actor }}
          TWINE_PASSWORD: ${{ secrets.GH_PAT }}

  release-github-packages-manylinux-x86-64:
    needs: validate-release-tag
    name: GitHub Packages release manylinux-2_17 x86_64
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine

      - name: Install system dependencies
        run: |
          sudo yum install -y perl-IPC-Cmd

      - name: Build with maturin
        run: |
          maturin build --release --target x86_64-unknown-linux-gnu -o dist

      - name: Publish to GitHub Packages
        run: |
          python -m twine upload --repository-url https://upload.pkg.github.com/ dist/*.whl
        env:
          TWINE_USERNAME: ${{ github.actor }}
          TWINE_PASSWORD: ${{ secrets.GH_PAT }}

  release-github-packages-manylinux-217-aarch64:
    needs: validate-release-tag
    name: GitHub Packages release manylinux-2_17 aarch64
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine

      - name: Build with maturin
        env:
          # We can remove this once we upgrade to 2_28.
          # https://github.com/briansmith/ring/issues/1728
          CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        run: |
          maturin build --release --target aarch64-unknown-linux-gnu -o dist

      - name: Publish to GitHub Packages
        run: |
          python -m twine upload --repository-url https://upload.pkg.github.com/ dist/*.whl
        env:
          TWINE_USERNAME: ${{ github.actor }}
          TWINE_PASSWORD: ${{ secrets.GH_PAT }}

  release-github-packages-manylinux-228-aarch64:
    needs: validate-release-tag
    name: GitHub Packages release manylinux-2_28 aarch64
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin twine

      - name: Build with maturin
        env:
          # We can remove this once we upgrade to 2_28.
          # https://github.com/briansmith/ring/issues/1728
          CFLAGS_aarch64_unknown_linux_gnu: "-D__ARM_ARCH=8"
        run: |
          maturin build --release --target aarch64-unknown-linux-gnu --manylinux 2_28 -o dist

      - name: Publish to GitHub Packages
        run: |
          python -m twine upload --repository-url https://upload.pkg.github.com/ dist/*.whl
        env:
          TWINE_USERNAME: ${{ github.actor }}
          TWINE_PASSWORD: ${{ secrets.GH_PAT }}
